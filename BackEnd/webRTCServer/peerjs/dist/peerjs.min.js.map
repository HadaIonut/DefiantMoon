{
  "version": 3,
  "sources": ["../node_modules/peerjs-js-binarypack/lib/bufferbuilder.js", "../node_modules/peerjs-js-binarypack/lib/binarypack.js", "../node_modules/eventemitter3/index.js", "../lib/utils.ts", "../lib/peer.ts", "../lib/logger.ts", "../lib/socket.ts", "../lib/negotiator.ts", "../lib/baseconnection.ts", "../lib/mediaconnection.ts", "../lib/encodingQueue.ts", "../lib/dataconnection.ts", "../lib/api.ts", "../lib/supports.ts", "../lib/index.ts"],
  "sourcesContent": ["var binaryFeatures = {};\r\nbinaryFeatures.useBlobBuilder = (function () {\r\n  try {\r\n    new Blob([]);\r\n    return false;\r\n  } catch (e) {\r\n    return true;\r\n  }\r\n})();\r\n\r\nbinaryFeatures.useArrayBufferView = !binaryFeatures.useBlobBuilder && (function () {\r\n  try {\r\n    return (new Blob([new Uint8Array([])])).size === 0;\r\n  } catch (e) {\r\n    return true;\r\n  }\r\n})();\r\n\r\nmodule.exports.binaryFeatures = binaryFeatures;\r\nvar BlobBuilder = module.exports.BlobBuilder;\r\nif (typeof window !== 'undefined') {\r\n  BlobBuilder = module.exports.BlobBuilder = window.WebKitBlobBuilder ||\r\n    window.MozBlobBuilder || window.MSBlobBuilder || window.BlobBuilder;\r\n}\r\n\r\nfunction BufferBuilder () {\r\n  this._pieces = [];\r\n  this._parts = [];\r\n}\r\n\r\nBufferBuilder.prototype.append = function (data) {\r\n  if (typeof data === 'number') {\r\n    this._pieces.push(data);\r\n  } else {\r\n    this.flush();\r\n    this._parts.push(data);\r\n  }\r\n};\r\n\r\nBufferBuilder.prototype.flush = function () {\r\n  if (this._pieces.length > 0) {\r\n    var buf = new Uint8Array(this._pieces);\r\n    if (!binaryFeatures.useArrayBufferView) {\r\n      buf = buf.buffer;\r\n    }\r\n    this._parts.push(buf);\r\n    this._pieces = [];\r\n  }\r\n};\r\n\r\nBufferBuilder.prototype.getBuffer = function () {\r\n  this.flush();\r\n  if (binaryFeatures.useBlobBuilder) {\r\n    var builder = new BlobBuilder();\r\n    for (var i = 0, ii = this._parts.length; i < ii; i++) {\r\n      builder.append(this._parts[i]);\r\n    }\r\n    return builder.getBlob();\r\n  } else {\r\n    return new Blob(this._parts);\r\n  }\r\n};\r\n\r\nmodule.exports.BufferBuilder = BufferBuilder;\r\n", "var BufferBuilder = require('./bufferbuilder').BufferBuilder;\r\nvar binaryFeatures = require('./bufferbuilder').binaryFeatures;\r\n\r\nvar BinaryPack = {\r\n  unpack: function (data) {\r\n    var unpacker = new Unpacker(data);\r\n    return unpacker.unpack();\r\n  },\r\n  pack: function (data) {\r\n    var packer = new Packer();\r\n    packer.pack(data);\r\n    var buffer = packer.getBuffer();\r\n    return buffer;\r\n  }\r\n};\r\n\r\nmodule.exports = BinaryPack;\r\n\r\nfunction Unpacker (data) {\r\n  // Data is ArrayBuffer\r\n  this.index = 0;\r\n  this.dataBuffer = data;\r\n  this.dataView = new Uint8Array(this.dataBuffer);\r\n  this.length = this.dataBuffer.byteLength;\r\n}\r\n\r\nUnpacker.prototype.unpack = function () {\r\n  var type = this.unpack_uint8();\r\n  if (type < 0x80) {\r\n    return type;\r\n  } else if ((type ^ 0xe0) < 0x20) {\r\n    return (type ^ 0xe0) - 0x20;\r\n  }\r\n\r\n  var size;\r\n  if ((size = type ^ 0xa0) <= 0x0f) {\r\n    return this.unpack_raw(size);\r\n  } else if ((size = type ^ 0xb0) <= 0x0f) {\r\n    return this.unpack_string(size);\r\n  } else if ((size = type ^ 0x90) <= 0x0f) {\r\n    return this.unpack_array(size);\r\n  } else if ((size = type ^ 0x80) <= 0x0f) {\r\n    return this.unpack_map(size);\r\n  }\r\n\r\n  switch (type) {\r\n    case 0xc0:\r\n      return null;\r\n    case 0xc1:\r\n      return undefined;\r\n    case 0xc2:\r\n      return false;\r\n    case 0xc3:\r\n      return true;\r\n    case 0xca:\r\n      return this.unpack_float();\r\n    case 0xcb:\r\n      return this.unpack_double();\r\n    case 0xcc:\r\n      return this.unpack_uint8();\r\n    case 0xcd:\r\n      return this.unpack_uint16();\r\n    case 0xce:\r\n      return this.unpack_uint32();\r\n    case 0xcf:\r\n      return this.unpack_uint64();\r\n    case 0xd0:\r\n      return this.unpack_int8();\r\n    case 0xd1:\r\n      return this.unpack_int16();\r\n    case 0xd2:\r\n      return this.unpack_int32();\r\n    case 0xd3:\r\n      return this.unpack_int64();\r\n    case 0xd4:\r\n      return undefined;\r\n    case 0xd5:\r\n      return undefined;\r\n    case 0xd6:\r\n      return undefined;\r\n    case 0xd7:\r\n      return undefined;\r\n    case 0xd8:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_string(size);\r\n    case 0xd9:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_string(size);\r\n    case 0xda:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_raw(size);\r\n    case 0xdb:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_raw(size);\r\n    case 0xdc:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_array(size);\r\n    case 0xdd:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_array(size);\r\n    case 0xde:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_map(size);\r\n    case 0xdf:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_map(size);\r\n  }\r\n};\r\n\r\nUnpacker.prototype.unpack_uint8 = function () {\r\n  var byte = this.dataView[this.index] & 0xff;\r\n  this.index++;\r\n  return byte;\r\n};\r\n\r\nUnpacker.prototype.unpack_uint16 = function () {\r\n  var bytes = this.read(2);\r\n  var uint16 =\r\n    ((bytes[0] & 0xff) * 256) + (bytes[1] & 0xff);\r\n  this.index += 2;\r\n  return uint16;\r\n};\r\n\r\nUnpacker.prototype.unpack_uint32 = function () {\r\n  var bytes = this.read(4);\r\n  var uint32 =\r\n    ((bytes[0] * 256 +\r\n      bytes[1]) * 256 +\r\n      bytes[2]) * 256 +\r\n    bytes[3];\r\n  this.index += 4;\r\n  return uint32;\r\n};\r\n\r\nUnpacker.prototype.unpack_uint64 = function () {\r\n  var bytes = this.read(8);\r\n  var uint64 =\r\n    ((((((bytes[0] * 256 +\r\n      bytes[1]) * 256 +\r\n      bytes[2]) * 256 +\r\n      bytes[3]) * 256 +\r\n      bytes[4]) * 256 +\r\n      bytes[5]) * 256 +\r\n      bytes[6]) * 256 +\r\n    bytes[7];\r\n  this.index += 8;\r\n  return uint64;\r\n};\r\n\r\nUnpacker.prototype.unpack_int8 = function () {\r\n  var uint8 = this.unpack_uint8();\r\n  return (uint8 < 0x80) ? uint8 : uint8 - (1 << 8);\r\n};\r\n\r\nUnpacker.prototype.unpack_int16 = function () {\r\n  var uint16 = this.unpack_uint16();\r\n  return (uint16 < 0x8000) ? uint16 : uint16 - (1 << 16);\r\n};\r\n\r\nUnpacker.prototype.unpack_int32 = function () {\r\n  var uint32 = this.unpack_uint32();\r\n  return (uint32 < Math.pow(2, 31)) ? uint32\r\n    : uint32 - Math.pow(2, 32);\r\n};\r\n\r\nUnpacker.prototype.unpack_int64 = function () {\r\n  var uint64 = this.unpack_uint64();\r\n  return (uint64 < Math.pow(2, 63)) ? uint64\r\n    : uint64 - Math.pow(2, 64);\r\n};\r\n\r\nUnpacker.prototype.unpack_raw = function (size) {\r\n  if (this.length < this.index + size) {\r\n    throw new Error('BinaryPackFailure: index is out of range' +\r\n      ' ' + this.index + ' ' + size + ' ' + this.length);\r\n  }\r\n  var buf = this.dataBuffer.slice(this.index, this.index + size);\r\n  this.index += size;\r\n\r\n  // buf = util.bufferToString(buf);\r\n\r\n  return buf;\r\n};\r\n\r\nUnpacker.prototype.unpack_string = function (size) {\r\n  var bytes = this.read(size);\r\n  var i = 0;\r\n  var str = '';\r\n  var c;\r\n  var code;\r\n\r\n  while (i < size) {\r\n    c = bytes[i];\r\n    if (c < 128) {\r\n      str += String.fromCharCode(c);\r\n      i++;\r\n    } else if ((c ^ 0xc0) < 32) {\r\n      code = ((c ^ 0xc0) << 6) | (bytes[i + 1] & 63);\r\n      str += String.fromCharCode(code);\r\n      i += 2;\r\n    } else {\r\n      code = ((c & 15) << 12) | ((bytes[i + 1] & 63) << 6) |\r\n        (bytes[i + 2] & 63);\r\n      str += String.fromCharCode(code);\r\n      i += 3;\r\n    }\r\n  }\r\n\r\n  this.index += size;\r\n  return str;\r\n};\r\n\r\nUnpacker.prototype.unpack_array = function (size) {\r\n  var objects = new Array(size);\r\n  for (var i = 0; i < size; i++) {\r\n    objects[i] = this.unpack();\r\n  }\r\n  return objects;\r\n};\r\n\r\nUnpacker.prototype.unpack_map = function (size) {\r\n  var map = {};\r\n  for (var i = 0; i < size; i++) {\r\n    var key = this.unpack();\r\n    var value = this.unpack();\r\n    map[key] = value;\r\n  }\r\n  return map;\r\n};\r\n\r\nUnpacker.prototype.unpack_float = function () {\r\n  var uint32 = this.unpack_uint32();\r\n  var sign = uint32 >> 31;\r\n  var exp = ((uint32 >> 23) & 0xff) - 127;\r\n  var fraction = (uint32 & 0x7fffff) | 0x800000;\r\n  return (sign === 0 ? 1 : -1) *\r\n    fraction * Math.pow(2, exp - 23);\r\n};\r\n\r\nUnpacker.prototype.unpack_double = function () {\r\n  var h32 = this.unpack_uint32();\r\n  var l32 = this.unpack_uint32();\r\n  var sign = h32 >> 31;\r\n  var exp = ((h32 >> 20) & 0x7ff) - 1023;\r\n  var hfrac = (h32 & 0xfffff) | 0x100000;\r\n  var frac = hfrac * Math.pow(2, exp - 20) +\r\n    l32 * Math.pow(2, exp - 52);\r\n  return (sign === 0 ? 1 : -1) * frac;\r\n};\r\n\r\nUnpacker.prototype.read = function (length) {\r\n  var j = this.index;\r\n  if (j + length <= this.length) {\r\n    return this.dataView.subarray(j, j + length);\r\n  } else {\r\n    throw new Error('BinaryPackFailure: read index out of range');\r\n  }\r\n};\r\n\r\nfunction Packer () {\r\n  this.bufferBuilder = new BufferBuilder();\r\n}\r\n\r\nPacker.prototype.getBuffer = function () {\r\n  return this.bufferBuilder.getBuffer();\r\n};\r\n\r\nPacker.prototype.pack = function (value) {\r\n  var type = typeof (value);\r\n  if (type === 'string') {\r\n    this.pack_string(value);\r\n  } else if (type === 'number') {\r\n    if (Math.floor(value) === value) {\r\n      this.pack_integer(value);\r\n    } else {\r\n      this.pack_double(value);\r\n    }\r\n  } else if (type === 'boolean') {\r\n    if (value === true) {\r\n      this.bufferBuilder.append(0xc3);\r\n    } else if (value === false) {\r\n      this.bufferBuilder.append(0xc2);\r\n    }\r\n  } else if (type === 'undefined') {\r\n    this.bufferBuilder.append(0xc0);\r\n  } else if (type === 'object') {\r\n    if (value === null) {\r\n      this.bufferBuilder.append(0xc0);\r\n    } else {\r\n      var constructor = value.constructor;\r\n      if (constructor == Array) {\r\n        this.pack_array(value);\r\n      } else if (constructor == Blob || constructor == File || value instanceof Blob || value instanceof File) {\r\n        this.pack_bin(value);\r\n      } else if (constructor == ArrayBuffer) {\r\n        if (binaryFeatures.useArrayBufferView) {\r\n          this.pack_bin(new Uint8Array(value));\r\n        } else {\r\n          this.pack_bin(value);\r\n        }\r\n      } else if ('BYTES_PER_ELEMENT' in value) {\r\n        if (binaryFeatures.useArrayBufferView) {\r\n          this.pack_bin(new Uint8Array(value.buffer));\r\n        } else {\r\n          this.pack_bin(value.buffer);\r\n        }\r\n      } else if ((constructor == Object) || (constructor.toString().startsWith('class'))) {\r\n        this.pack_object(value);\r\n      } else if (constructor == Date) {\r\n        this.pack_string(value.toString());\r\n      } else if (typeof value.toBinaryPack === 'function') {\r\n        this.bufferBuilder.append(value.toBinaryPack());\r\n      } else {\r\n        throw new Error('Type \"' + constructor.toString() + '\" not yet supported');\r\n      }\r\n    }\r\n  } else {\r\n    throw new Error('Type \"' + type + '\" not yet supported');\r\n  }\r\n  this.bufferBuilder.flush();\r\n};\r\n\r\nPacker.prototype.pack_bin = function (blob) {\r\n  var length = blob.length || blob.byteLength || blob.size;\r\n  if (length <= 0x0f) {\r\n    this.pack_uint8(0xa0 + length);\r\n  } else if (length <= 0xffff) {\r\n    this.bufferBuilder.append(0xda);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xdb);\r\n    this.pack_uint32(length);\r\n  } else {\r\n    throw new Error('Invalid length');\r\n  }\r\n  this.bufferBuilder.append(blob);\r\n};\r\n\r\nPacker.prototype.pack_string = function (str) {\r\n  var length = utf8Length(str);\r\n\r\n  if (length <= 0x0f) {\r\n    this.pack_uint8(0xb0 + length);\r\n  } else if (length <= 0xffff) {\r\n    this.bufferBuilder.append(0xd8);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xd9);\r\n    this.pack_uint32(length);\r\n  } else {\r\n    throw new Error('Invalid length');\r\n  }\r\n  this.bufferBuilder.append(str);\r\n};\r\n\r\nPacker.prototype.pack_array = function (ary) {\r\n  var length = ary.length;\r\n  if (length <= 0x0f) {\r\n    this.pack_uint8(0x90 + length);\r\n  } else if (length <= 0xffff) {\r\n    this.bufferBuilder.append(0xdc);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xdd);\r\n    this.pack_uint32(length);\r\n  } else {\r\n    throw new Error('Invalid length');\r\n  }\r\n  for (var i = 0; i < length; i++) {\r\n    this.pack(ary[i]);\r\n  }\r\n};\r\n\r\nPacker.prototype.pack_integer = function (num) {\r\n  if (num >= -0x20 && num <= 0x7f) {\r\n    this.bufferBuilder.append(num & 0xff);\r\n  } else if (num >= 0x00 && num <= 0xff) {\r\n    this.bufferBuilder.append(0xcc);\r\n    this.pack_uint8(num);\r\n  } else if (num >= -0x80 && num <= 0x7f) {\r\n    this.bufferBuilder.append(0xd0);\r\n    this.pack_int8(num);\r\n  } else if (num >= 0x0000 && num <= 0xffff) {\r\n    this.bufferBuilder.append(0xcd);\r\n    this.pack_uint16(num);\r\n  } else if (num >= -0x8000 && num <= 0x7fff) {\r\n    this.bufferBuilder.append(0xd1);\r\n    this.pack_int16(num);\r\n  } else if (num >= 0x00000000 && num <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xce);\r\n    this.pack_uint32(num);\r\n  } else if (num >= -0x80000000 && num <= 0x7fffffff) {\r\n    this.bufferBuilder.append(0xd2);\r\n    this.pack_int32(num);\r\n  } else if (num >= -0x8000000000000000 && num <= 0x7FFFFFFFFFFFFFFF) {\r\n    this.bufferBuilder.append(0xd3);\r\n    this.pack_int64(num);\r\n  } else if (num >= 0x0000000000000000 && num <= 0xFFFFFFFFFFFFFFFF) {\r\n    this.bufferBuilder.append(0xcf);\r\n    this.pack_uint64(num);\r\n  } else {\r\n    throw new Error('Invalid integer');\r\n  }\r\n};\r\n\r\nPacker.prototype.pack_double = function (num) {\r\n  var sign = 0;\r\n  if (num < 0) {\r\n    sign = 1;\r\n    num = -num;\r\n  }\r\n  var exp = Math.floor(Math.log(num) / Math.LN2);\r\n  var frac0 = num / Math.pow(2, exp) - 1;\r\n  var frac1 = Math.floor(frac0 * Math.pow(2, 52));\r\n  var b32 = Math.pow(2, 32);\r\n  var h32 = (sign << 31) | ((exp + 1023) << 20) |\r\n    (frac1 / b32) & 0x0fffff;\r\n  var l32 = frac1 % b32;\r\n  this.bufferBuilder.append(0xcb);\r\n  this.pack_int32(h32);\r\n  this.pack_int32(l32);\r\n};\r\n\r\nPacker.prototype.pack_object = function (obj) {\r\n  var keys = Object.keys(obj);\r\n  var length = keys.length;\r\n  if (length <= 0x0f) {\r\n    this.pack_uint8(0x80 + length);\r\n  } else if (length <= 0xffff) {\r\n    this.bufferBuilder.append(0xde);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xdf);\r\n    this.pack_uint32(length);\r\n  } else {\r\n    throw new Error('Invalid length');\r\n  }\r\n  for (var prop in obj) {\r\n    if (obj.hasOwnProperty(prop)) {\r\n      this.pack(prop);\r\n      this.pack(obj[prop]);\r\n    }\r\n  }\r\n};\r\n\r\nPacker.prototype.pack_uint8 = function (num) {\r\n  this.bufferBuilder.append(num);\r\n};\r\n\r\nPacker.prototype.pack_uint16 = function (num) {\r\n  this.bufferBuilder.append(num >> 8);\r\n  this.bufferBuilder.append(num & 0xff);\r\n};\r\n\r\nPacker.prototype.pack_uint32 = function (num) {\r\n  var n = num & 0xffffffff;\r\n  this.bufferBuilder.append((n & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((n & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((n & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((n & 0x000000ff));\r\n};\r\n\r\nPacker.prototype.pack_uint64 = function (num) {\r\n  var high = num / Math.pow(2, 32);\r\n  var low = num % Math.pow(2, 32);\r\n  this.bufferBuilder.append((high & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((high & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((high & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((high & 0x000000ff));\r\n  this.bufferBuilder.append((low & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((low & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((low & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((low & 0x000000ff));\r\n};\r\n\r\nPacker.prototype.pack_int8 = function (num) {\r\n  this.bufferBuilder.append(num & 0xff);\r\n};\r\n\r\nPacker.prototype.pack_int16 = function (num) {\r\n  this.bufferBuilder.append((num & 0xff00) >> 8);\r\n  this.bufferBuilder.append(num & 0xff);\r\n};\r\n\r\nPacker.prototype.pack_int32 = function (num) {\r\n  this.bufferBuilder.append((num >>> 24) & 0xff);\r\n  this.bufferBuilder.append((num & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((num & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((num & 0x000000ff));\r\n};\r\n\r\nPacker.prototype.pack_int64 = function (num) {\r\n  var high = Math.floor(num / Math.pow(2, 32));\r\n  var low = num % Math.pow(2, 32);\r\n  this.bufferBuilder.append((high & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((high & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((high & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((high & 0x000000ff));\r\n  this.bufferBuilder.append((low & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((low & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((low & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((low & 0x000000ff));\r\n};\r\n\r\nfunction _utf8Replace (m) {\r\n  var code = m.charCodeAt(0);\r\n\r\n  if (code <= 0x7ff) return '00';\r\n  if (code <= 0xffff) return '000';\r\n  if (code <= 0x1fffff) return '0000';\r\n  if (code <= 0x3ffffff) return '00000';\r\n  return '000000';\r\n}\r\n\r\nfunction utf8Length (str) {\r\n  if (str.length > 600) {\r\n    // Blob method faster for large strings\r\n    return (new Blob([str])).size;\r\n  } else {\r\n    return str.replace(/[^\\u0000-\\u007F]/g, _utf8Replace).length;\r\n  }\r\n}\r\n", "'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n", "import * as BinaryPack from 'peerjs-js-binarypack';\n\nconst DEFAULT_CONFIG = {\n  iceServers: [\n    { urls: 'stun:stun.l.google.com:19302' },\n    { urls: 'turn:0.peerjs.com:3478', username: 'peerjs', credential: 'peerjsp' },\n  ],\n  sdpSemantics: 'unified-plan',\n};\n\nexport const Utils = new (class {\n  readonly CLOUD_HOST = '0.peerjs.com';\n  readonly CLOUD_PORT = 443;\n\n  readonly chunkedMTU = 16300; // The original 60000 bytes setting does not work when sending data from Firefox to Chrome, which is \"cut off\" after 16384 bytes and delivered individually.\n\n  // Returns browser-agnostic default config\n  readonly defaultConfig = DEFAULT_CONFIG;\n\n  // Ensure alphanumeric ids\n  validateId(id: string): boolean {\n    // Allow empty ids\n    return !id || /^[A-Za-z0-9]+(?:[ _-][A-Za-z0-9]+)*$/.test(id);\n  }\n\n  pack = BinaryPack.pack;\n  unpack = BinaryPack.unpack;\n\n  // Binary stuff\n\n  private _dataCount: number = 1;\n\n  chunk(blob: Blob): { __peerData: number; n: number; total: number; data: Blob }[] {\n    const chunks = [];\n    const size = blob.size;\n    const total = Math.ceil(size / Utils.chunkedMTU);\n\n    let index = 0;\n    let start = 0;\n\n    while (start < size) {\n      const end = Math.min(size, start + Utils.chunkedMTU);\n      const b = blob.slice(start, end);\n\n      const chunk = {\n        __peerData: this._dataCount,\n        n: index,\n        data: b,\n        total,\n      };\n\n      chunks.push(chunk);\n\n      start = end;\n      index++;\n    }\n\n    this._dataCount++;\n\n    return chunks;\n  }\n\n  blobToArrayBuffer(FileReaderCtr: typeof FileReader, blob: Blob, cb: (arg: ArrayBuffer | null) => void): FileReader {\n    const fr = new FileReaderCtr();\n\n    fr.onload = function (evt) {\n      if (evt.target) {\n        cb(evt.target.result as ArrayBuffer);\n      }\n    };\n\n    fr.readAsArrayBuffer(blob);\n\n    return fr;\n  }\n\n  binaryStringToArrayBuffer(binary: string): ArrayBuffer | SharedArrayBuffer {\n    const byteArray = new Uint8Array(binary.length);\n\n    for (let i = 0; i < binary.length; i++) {\n      byteArray[i] = binary.charCodeAt(i) & 0xff;\n    }\n\n    return byteArray.buffer;\n  }\n\n  randomToken(): string {\n    return Math.random().toString(36).substr(2);\n  }\n\n  isSecure(): boolean {\n    return location.protocol === 'https:';\n  }\n})();\n", "import { EventEmitter } from 'eventemitter3';\nimport { Utils } from './utils';\nimport logger, { LogLevel } from './logger';\nimport { Socket } from './socket';\nimport { MediaConnection } from './mediaconnection';\nimport { DataConnection } from './dataconnection';\nimport { ConnectionType, PeerErrorType, PeerEventType, SocketEventType, ServerMessageType } from './enums';\nimport { BaseConnection } from './baseconnection';\nimport { ServerMessage } from './servermessage';\nimport { API } from './api';\nimport type { PeerConnectOption, PeerJSOption, Features } from '..';\nimport { Supports } from './supports';\n\ninterface PeerOptions extends PeerJSOption {\n  debug?: LogLevel; // 1: Errors, 2: Warnings, 3: All logs\n  logFunction?: (logLevel: LogLevel, ...rest: any[]) => void;\n}\n\n/**\n * A peer who can initiate connections with other peers.\n */\nexport class Peer extends EventEmitter {\n  private static readonly DEFAULT_KEY = 'peerjs';\n\n  private readonly _options: PeerOptions;\n  private readonly _api: API;\n  private readonly _socket: Socket;\n\n  private _id: string | null = null;\n  private _lastServerId: string | null = null;\n\n  // States.\n  private _destroyed = false; // Connections have been killed\n  private _disconnected = false; // Connection to PeerServer killed but P2P connections still active\n  private _open = false; // Sockets and such are not yet open.\n  private readonly _connections: Map<string, BaseConnection[]> = new Map(); // All connections for this peer.\n  private readonly _lostMessages: Map<string, ServerMessage[]> = new Map(); // src => [list of messages]\n\n  get id() {\n    return this._id;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  get open() {\n    return this._open;\n  }\n\n  get socket() {\n    return this._socket;\n  }\n\n  /**\n   * @deprecated\n   * Return type will change from Object to Map<string,[]>\n   */\n  get connections(): Object {\n    const plainConnections = Object.create(null);\n\n    for (let [k, v] of this._connections) {\n      plainConnections[k] = v;\n    }\n\n    return plainConnections;\n  }\n\n  get destroyed() {\n    return this._destroyed;\n  }\n  get disconnected() {\n    return this._disconnected;\n  }\n\n  readonly features: Features;\n\n  constructor(id?: string | PeerOptions, options?: PeerOptions) {\n    super();\n\n    let userId: string | undefined;\n\n    // Deal with overloading\n    if (id && id.constructor == Object) {\n      options = id as PeerOptions;\n    } else if (id) {\n      userId = id.toString();\n    }\n\n    // Configure options\n    options = {\n      debug: 0, // 1: Errors, 2: Warnings, 3: All logs\n      host: Utils.CLOUD_HOST,\n      port: Utils.CLOUD_PORT,\n      path: '/',\n      key: Peer.DEFAULT_KEY,\n      token: Utils.randomToken(),\n      config: Utils.defaultConfig,\n      ...options,\n    };\n    this._options = options;\n\n    // Detect relative URL host.\n    if (typeof window !== 'undefined' && this._options.host === '/') {\n      this._options.host = window.location.hostname;\n    }\n\n    // Set path correctly.\n    if (this._options.path) {\n      if (this._options.path[0] !== '/') {\n        this._options.path = '/' + this._options.path;\n      }\n      if (this._options.path[this._options.path.length - 1] !== '/') {\n        this._options.path += '/';\n      }\n    }\n\n    // Set whether we use SSL to same as current host\n    if (this._options.secure === undefined && this._options.host !== Utils.CLOUD_HOST) {\n      this._options.secure = Utils.isSecure();\n    } else if (this._options.host == Utils.CLOUD_HOST) {\n      this._options.secure = true;\n    }\n    // Set a custom log function if present\n    if (this._options.logFunction) {\n      logger.setLogFunction(this._options.logFunction);\n    }\n\n    logger.logLevel = this._options.debug || 0;\n\n    this._api = new API(options);\n    this._socket = this._createServerConnection();\n\n    this.features = Peer.getFeatures(this._options.polyfills?.WebRTC);\n\n    // Sanity checks\n    // Ensure WebRTC supported\n    if (!this.features.audioVideo && !this.features.data) {\n      this._delayedAbort(PeerErrorType.BrowserIncompatible, 'The current browser does not support WebRTC');\n      return;\n    }\n\n    // Ensure alphanumeric id\n    if (!!userId && !Utils.validateId(userId)) {\n      this._delayedAbort(PeerErrorType.InvalidID, `ID \"${userId}\" is invalid`);\n      return;\n    }\n\n    this.socket.alive = true;\n\n    if (userId) {\n      this._initialize(userId);\n    } else {\n      this._api\n        .retrieveId()\n        .then(id => this._initialize(id))\n        .catch(error => this._abort(PeerErrorType.ServerError, error));\n    }\n  }\n\n  private _createServerConnection(): Socket {\n    const socket = new Socket(this._options);\n\n    socket.on(SocketEventType.Message, (data: ServerMessage) => {\n      this._handleMessage(data);\n    });\n\n    socket.on(SocketEventType.Error, (error: string) => {\n      this._abort(PeerErrorType.SocketError, error);\n    });\n\n    socket.on(SocketEventType.Disconnected, () => {\n      if (this.disconnected) {\n        return;\n      }\n\n      this.emitError(PeerErrorType.Network, 'Lost connection to server.');\n      this.disconnect();\n    });\n\n    socket.on(SocketEventType.Close, () => {\n      if (this.disconnected) {\n        return;\n      }\n\n      this._abort(PeerErrorType.SocketClosed, 'Underlying socket is already closed.');\n    });\n\n    return socket;\n  }\n\n  /** Initialize a connection with the server. */\n  private _initialize(id: string): void {\n    if (this.destroyed) return;\n\n    this._id = id;\n    this.socket.start(id, this._options.token!);\n  }\n\n  /** Handles messages from the server. */\n  private _handleMessage(message: ServerMessage): void {\n    const type = message.type;\n    const payload = message.payload;\n    const peerId = message.src;\n\n    switch (type) {\n      case ServerMessageType.Open: // The connection to the server is open.\n        this._lastServerId = this.id;\n        this._open = true;\n        this.emit(PeerEventType.Open, this.id);\n        break;\n      case ServerMessageType.Error: // Server error.\n        this._abort(PeerErrorType.ServerError, payload.msg);\n        break;\n      case ServerMessageType.IdTaken: // The selected ID is taken.\n        this._abort(PeerErrorType.UnavailableID, `ID \"${this.id}\" is taken`);\n        break;\n      case ServerMessageType.InvalidKey: // The given API key cannot be found.\n        this._abort(PeerErrorType.InvalidKey, `API KEY \"${this._options.key}\" is invalid`);\n        break;\n      case ServerMessageType.Leave: // Another peer has closed its connection to this peer.\n        logger.log(`Received leave message from ${peerId}`);\n        this._cleanupPeer(peerId);\n        this._connections.delete(peerId);\n        break;\n      case ServerMessageType.Expire: // The offer sent to a peer has expired without response.\n        this.emitError(PeerErrorType.PeerUnavailable, `Could not connect to peer ${peerId}`);\n        break;\n      case ServerMessageType.Offer: {\n        // we should consider switching this to CALL/CONNECT, but this is the least breaking option.\n        const connectionId = payload.connectionId;\n        let connection = this.getConnection(peerId, connectionId);\n\n        if (connection) {\n          connection.close();\n          logger.warn(`Offer received for existing Connection ID:${connectionId}`);\n        }\n\n        // Create a new connection.\n        if (payload.type === ConnectionType.Media) {\n          connection = new MediaConnection(peerId, this, {\n            connectionId: connectionId,\n            _payload: payload,\n            metadata: payload.metadata,\n          });\n          this._addConnection(peerId, connection);\n          this.emit(PeerEventType.Call, connection);\n        } else if (payload.type === ConnectionType.Data) {\n          connection = new DataConnection(peerId, this, {\n            connectionId: connectionId,\n            _payload: payload,\n            metadata: payload.metadata,\n            label: payload.label,\n            serialization: payload.serialization,\n            reliable: payload.reliable,\n          });\n          this._addConnection(peerId, connection);\n          this.emit(PeerEventType.Connection, connection);\n        } else {\n          logger.warn(`Received malformed connection type:${payload.type}`);\n          return;\n        }\n\n        // Find messages.\n        const messages = this._getMessages(connectionId);\n        for (let message of messages) {\n          connection.handleMessage(message);\n        }\n\n        break;\n      }\n      default: {\n        if (!payload) {\n          logger.warn(`You received a malformed message from ${peerId} of type ${type}`);\n          return;\n        }\n\n        const connectionId = payload.connectionId;\n        const connection = this.getConnection(peerId, connectionId);\n\n        if (connection && connection.peerConnection) {\n          // Pass it on.\n          connection.handleMessage(message);\n        } else if (connectionId) {\n          // Store for possible later use\n          this._storeMessage(connectionId, message);\n        } else {\n          logger.warn('You received an unrecognized message:', message);\n        }\n        break;\n      }\n    }\n  }\n\n  /** Stores messages without a set up connection, to be claimed later. */\n  private _storeMessage(connectionId: string, message: ServerMessage): void {\n    if (!this._lostMessages.has(connectionId)) {\n      this._lostMessages.set(connectionId, []);\n    }\n\n    this._lostMessages.get(connectionId).push(message);\n  }\n\n  /** Retrieve messages from lost message store */\n  //TODO Change it to private\n  public _getMessages(connectionId: string): ServerMessage[] {\n    const messages = this._lostMessages.get(connectionId);\n\n    if (messages) {\n      this._lostMessages.delete(connectionId);\n      return messages;\n    }\n\n    return [];\n  }\n\n  /**\n   * Returns a DataConnection to the specified peer. See documentation for a\n   * complete list of options.\n   */\n  connect(peer: string, options: PeerConnectOption = {}): DataConnection {\n    if (this.disconnected) {\n      logger.warn(\n        'You cannot connect to a new Peer because you called ' +\n          '.disconnect() on this Peer and ended your connection with the ' +\n          'server. You can create a new Peer to reconnect, or call reconnect ' +\n          'on this peer if you believe its ID to still be available.'\n      );\n      this.emitError(PeerErrorType.Disconnected, 'Cannot connect to new Peer after disconnecting from server.');\n      return;\n    }\n\n    const dataConnection = new DataConnection(peer, this, options);\n    this._addConnection(peer, dataConnection);\n    return dataConnection;\n  }\n\n  /**\n   * Returns a MediaConnection to the specified peer. See documentation for a\n   * complete list of options.\n   */\n  call(peer: string, stream: MediaStream, options: any = {}): MediaConnection {\n    if (this.disconnected) {\n      logger.warn(\n        'You cannot connect to a new Peer because you called ' +\n          '.disconnect() on this Peer and ended your connection with the ' +\n          'server. You can create a new Peer to reconnect.'\n      );\n      this.emitError(PeerErrorType.Disconnected, 'Cannot connect to new Peer after disconnecting from server.');\n      return;\n    }\n\n    if (!stream) {\n      logger.error(\"To call a peer, you must provide a stream from your browser's `getUserMedia`.\");\n      return;\n    }\n\n    options._stream = stream;\n\n    const mediaConnection = new MediaConnection(peer, this, options);\n    this._addConnection(peer, mediaConnection);\n    return mediaConnection;\n  }\n\n  /** Add a data/media connection to this peer. */\n  private _addConnection(peerId: string, connection: BaseConnection): void {\n    logger.log(`add connection ${connection.type}:${connection.connectionId} to peerId:${peerId}`);\n\n    if (!this._connections.has(peerId)) {\n      this._connections.set(peerId, []);\n    }\n    this._connections.get(peerId).push(connection);\n  }\n\n  //TODO should be private\n  _removeConnection(connection: BaseConnection): void {\n    const connections = this._connections.get(connection.peer);\n\n    if (connections) {\n      const index = connections.indexOf(connection);\n\n      if (index !== -1) {\n        connections.splice(index, 1);\n\n        if (connections.length === 0) {\n          this._connections.delete(connection.peer);\n        }\n      }\n    }\n\n    //remove from lost messages\n    this._lostMessages.delete(connection.connectionId);\n  }\n\n  /** Retrieve a data/media connection for this peer. */\n  getConnection(peerId: string, connectionId: string): null | BaseConnection {\n    const connections = this._connections.get(peerId);\n    if (!connections) {\n      return null;\n    }\n\n    for (let connection of connections) {\n      if (connection.connectionId === connectionId) {\n        return connection;\n      }\n    }\n\n    return null;\n  }\n\n  private _delayedAbort(type: PeerErrorType, message: string | Error): void {\n    setTimeout(() => {\n      this._abort(type, message);\n    }, 0);\n  }\n\n  /**\n   * Emits an error message and destroys the Peer.\n   * The Peer is not destroyed if it's in a disconnected state, in which case\n   * it retains its disconnected state and its existing connections.\n   */\n  private _abort(type: PeerErrorType, message: string | Error): void {\n    logger.error('Aborting!');\n\n    this.emitError(type, message);\n\n    if (!this._lastServerId) {\n      this.destroy();\n    } else {\n      this.disconnect();\n    }\n  }\n\n  /** Emits a typed error message. */\n  emitError(type: PeerErrorType, err: string | Error): void {\n    logger.error('Error:', err);\n\n    let error: Error & { type?: PeerErrorType };\n\n    if (typeof err === 'string') {\n      error = new Error(err);\n    } else {\n      error = err as Error;\n    }\n\n    error.type = type;\n\n    this.emit(PeerEventType.Error, error);\n  }\n\n  /**\n   * Destroys the Peer: closes all active connections as well as the connection\n   *  to the server.\n   * Warning: The peer can no longer create or accept connections after being\n   *  destroyed.\n   */\n  destroy(): void {\n    if (this.destroyed) {\n      return;\n    }\n\n    logger.log(`Destroy peer with ID:${this.id}`);\n\n    this.disconnect();\n    this._cleanup();\n\n    this.socket.destroy();\n\n    this._destroyed = true;\n\n    this.emit(PeerEventType.Close);\n  }\n\n  /** Disconnects every connection on this peer. */\n  private _cleanup(): void {\n    for (let peerId of this._connections.keys()) {\n      this._cleanupPeer(peerId);\n      this._connections.delete(peerId);\n    }\n\n    this.socket.removeAllListeners();\n  }\n\n  /** Closes all connections to this peer. */\n  private _cleanupPeer(peerId: string): void {\n    const connections = this._connections.get(peerId);\n\n    if (!connections) return;\n\n    for (let connection of connections) {\n      connection.close();\n    }\n  }\n\n  /**\n   * Disconnects the Peer's connection to the PeerServer. Does not close any\n   *  active connections.\n   * Warning: The peer can no longer create or accept connections after being\n   *  disconnected. It also cannot reconnect to the server.\n   */\n  disconnect(): void {\n    if (this.disconnected) {\n      return;\n    }\n\n    const currentId = this.id;\n\n    logger.log(`Disconnect peer with ID:${currentId}`);\n\n    this._disconnected = true;\n    this._open = false;\n\n    this.socket.alive = false;\n    this.socket.close();\n\n    this._lastServerId = currentId;\n    this._id = null;\n\n    this.emit(PeerEventType.Disconnected, currentId);\n  }\n\n  /** Attempts to reconnect with the same ID. */\n  reconnect(): void {\n    if (this.disconnected && !this.destroyed) {\n      logger.log(`Attempting reconnection to server with ID ${this._lastServerId}`);\n      this._disconnected = false;\n      this.socket.alive = true;\n      this._initialize(this._lastServerId!);\n    } else if (this.destroyed) {\n      throw new Error('This peer cannot reconnect to the server. It has already been destroyed.');\n    } else if (!this.disconnected && !this.open) {\n      // Do nothing. We're still connecting the first time.\n      logger.error(\"In a hurry? We're still trying to make the initial connection!\");\n    } else {\n      throw new Error(`Peer ${this.id} cannot reconnect because it is not disconnected from the server!`);\n    }\n  }\n\n  /**\n   * Get a list of available peer IDs. If you're running your own server, you'll\n   * want to set allow_discovery: true in the PeerServer options. If you're using\n   * the cloud server, email team@peerjs.com to get the functionality enabled for\n   * your key.\n   */\n  listAllPeers(cb = (_: any[]) => {}): void {\n    this._api\n      .listAllPeers()\n      .then(peers => cb(peers))\n      .catch(error => this._abort(PeerErrorType.ServerError, error));\n  }\n\n  static getFeatures(webRtc: any): Features {\n    if (!webRtc && typeof window !== 'undefined') {\n      webRtc = window;\n    }\n\n    if (!Peer._features) {\n      Peer._features = Peer.checkFeatures(webRtc);\n    }\n\n    return Peer._features;\n  }\n\n  private static _features?: Features;\n\n  // Lists which features are supported\n  private static checkFeatures(webRtc: any): Features {\n    if (!webRtc && typeof window !== 'undefined') {\n      webRtc = window;\n    }\n\n    const supported: Features = {\n      webRTC: typeof webRtc.RTCPeerConnection !== 'undefined',\n      audioVideo: true,\n      data: false,\n      binaryBlob: false,\n      reliable: false,\n      unifiedPlan: false,\n    };\n\n    if (!supported.webRTC) return supported;\n\n    let pc: RTCPeerConnection;\n\n    try {\n      pc = new webRtc.RTCPeerConnection(Utils.defaultConfig);\n      let dc: RTCDataChannel;\n\n      try {\n        dc = pc.createDataChannel('_PEERJSTEST', { ordered: true });\n        supported.data = true;\n        supported.reliable = !!dc.ordered;\n\n        // Binary test\n        try {\n          dc.binaryType = 'blob';\n          supported.binaryBlob = true; //not works for iOS?\n        } catch (e) {}\n      } catch (e) {\n      } finally {\n        if (dc) {\n          dc.close();\n        }\n      }\n    } catch (e) {\n    } finally {\n      if (pc) {\n        pc.close();\n      }\n    }\n\n    supported.unifiedPlan = Supports.isUnifiedPlanSupported(webRtc);\n\n    return supported;\n  }\n}\n", "const LOG_PREFIX = 'PeerJS: ';\n\n/*\nPrints log messages depending on the debug level passed in. Defaults to 0.\n0  Prints no logs.\n1  Prints only errors.\n2  Prints errors and warnings.\n3  Prints all logs.\n*/\nexport enum LogLevel {\n  Disabled,\n  Errors,\n  Warnings,\n  All,\n}\n\nclass Logger {\n  private _logLevel = LogLevel.Disabled;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(logLevel: LogLevel) {\n    this._logLevel = logLevel;\n  }\n\n  log(...args: any[]) {\n    if (this._logLevel >= LogLevel.All) {\n      this._print(LogLevel.All, ...args);\n    }\n  }\n\n  warn(...args: any[]) {\n    if (this._logLevel >= LogLevel.Warnings) {\n      this._print(LogLevel.Warnings, ...args);\n    }\n  }\n\n  error(...args: any[]) {\n    if (this._logLevel >= LogLevel.Errors) {\n      this._print(LogLevel.Errors, ...args);\n    }\n  }\n\n  setLogFunction(fn: (logLevel: LogLevel, ..._: any[]) => void): void {\n    this._print = fn;\n  }\n\n  private _print(logLevel: LogLevel, ...rest: any[]): void {\n    const copy = [LOG_PREFIX, ...rest];\n\n    for (let i in copy) {\n      if (copy[i] instanceof Error) {\n        copy[i] = '(' + copy[i].name + ') ' + copy[i].message;\n      }\n    }\n\n    if (logLevel >= LogLevel.All) {\n      console.log(...copy);\n    } else if (logLevel >= LogLevel.Warnings) {\n      console.warn('WARNING', ...copy);\n    } else if (logLevel >= LogLevel.Errors) {\n      console.error('ERROR', ...copy);\n    }\n  }\n}\n\nexport default new Logger();\n", "import { EventEmitter } from 'eventemitter3';\nimport logger from './logger';\nimport { SocketEventType, ServerMessageType, type ConnectionType } from './enums';\nimport type { PeerJSOption } from '../index';\n\ntype MessageData = {\n  type: ServerMessageType;\n  dst: string;\n  payload: {\n    type: ConnectionType;\n    connectionId: string;\n  } & Record<string, any>;\n};\n/**\n * An abstraction on top of WebSockets to provide the fastest\n * possible connection for peers.\n */\nexport class Socket extends EventEmitter {\n  private _disconnected: boolean = true;\n  private _id: string | null = null;\n  private _messagesQueue: Array<MessageData> = [];\n  private _socket?: WebSocket;\n  private _wsPingTimer?: any;\n  private readonly _baseUrl: string;\n\n  private readonly pingInterval: number;\n  private readonly WebSocketConstructor: typeof WebSocket;\n\n  alive: boolean = false;\n\n  private _destroyed = false;\n\n  get messagesQueue(): ReadonlyArray<MessageData> {\n    return this._messagesQueue;\n  }\n\n  get destroyed() {\n    return this._destroyed;\n  }\n\n  constructor({ secure, host, port, path, key, pingInterval = 5000, polyfills }: PeerJSOption) {\n    super();\n\n    this.pingInterval = pingInterval;\n\n    const wsProtocol = secure ? 'wss://' : 'ws://';\n\n    this._baseUrl = wsProtocol + host + ':' + port + path + 'peerjs?key=' + key;\n    this.WebSocketConstructor = polyfills?.WebSocket ?? window.WebSocket;\n  }\n\n  start(id: string, token: string): void {\n    if (this._destroyed) throw new Error('Socket was destroyed!');\n\n    this._id = id;\n\n    if (!!this._socket || !this._disconnected) {\n      return;\n    }\n\n    const wsUrl = `${this._baseUrl}&id=${id}&token=${token}`;\n\n    this._socket = new this.WebSocketConstructor(wsUrl);\n    this._disconnected = false;\n\n    this._socket.onmessage = event => {\n      if (this._destroyed) return;\n\n      let data;\n\n      try {\n        data = JSON.parse(event.data);\n        logger.log('Server message received:', data);\n      } catch (e) {\n        logger.log('Invalid server message', event.data);\n        return;\n      }\n\n      this.emit(SocketEventType.Message, data);\n    };\n\n    this._socket.onclose = event => {\n      if (this._disconnected || this._destroyed) {\n        return;\n      }\n\n      logger.log('Socket closed.', event);\n\n      this._cleanup();\n      this._disconnected = true;\n\n      this.emit(SocketEventType.Disconnected);\n    };\n\n    // Take care of the queue of connections if necessary and make sure Peer knows\n    // socket is open.\n    this._socket.onopen = () => {\n      if (this._disconnected || this._destroyed) {\n        return;\n      }\n\n      logger.log('Socket open');\n\n      this.emit(SocketEventType.Open);\n\n      this._sendQueuedMessages();\n\n      this._scheduleHeartbeat();\n    };\n  }\n\n  private _scheduleHeartbeat(): void {\n    this._wsPingTimer = setTimeout(() => {\n      this._sendHeartbeat();\n    }, this.pingInterval);\n  }\n\n  private _sendHeartbeat(): void {\n    if (this._destroyed) return;\n\n    if (!this._wsOpen()) {\n      logger.log(`Cannot send heartbeat, because socket closed`);\n      return;\n    }\n\n    const message = JSON.stringify({ type: ServerMessageType.Heartbeat });\n\n    this._socket!.send(message);\n\n    this._scheduleHeartbeat();\n  }\n\n  /** Is the websocket currently open? */\n  private _wsOpen(): boolean {\n    return !!this._socket && this._socket.readyState === 1;\n  }\n\n  /** Send queued messages. */\n  private _sendQueuedMessages(): void {\n    //Create copy of queue and clear it,\n    //because send method push the message back to queue if something will go wrong\n    const copiedQueue = [...this._messagesQueue];\n    this._messagesQueue = [];\n\n    for (const message of copiedQueue) {\n      this.send(message);\n    }\n\n    if (copiedQueue.length > 0) {\n      logger.log(`${copiedQueue.length} queued messages was sent`);\n    }\n  }\n\n  /** Exposed send for DC & Peer. */\n  send(data: MessageData): void {\n    if (this._destroyed) throw new Error('Socket was destroyed!');\n\n    if (!data.type) {\n      this.emit(SocketEventType.Error, 'Invalid message');\n      return;\n    }\n\n    if (!this.alive) {\n      return;\n    }\n\n    // If we didn't get an ID yet, we can't yet send anything so we should queue\n    // up these messages.\n    if (this._id == null || !this._wsOpen()) {\n      this._messagesQueue.push(data);\n      return;\n    }\n\n    const message = JSON.stringify(data);\n\n    this._socket!.send(message);\n  }\n\n  close(): void {\n    if (this._disconnected) {\n      return;\n    }\n\n    this._cleanup();\n\n    this._id = null;\n\n    this._disconnected = true;\n  }\n\n  private _cleanup(): void {\n    if (this._socket) {\n      this._socket.onopen = this._socket.onmessage = this._socket.onclose = null;\n      this._socket.close();\n      this._socket = undefined;\n    }\n\n    clearTimeout(this._wsPingTimer!);\n  }\n\n  destroy() {\n    if (this._destroyed) return;\n\n    this.close();\n    this._messagesQueue.length = 0;\n\n    this._destroyed = true;\n  }\n}\n", "import logger from './logger';\nimport type { MediaConnection } from './mediaconnection';\nimport type { DataConnection } from './dataconnection';\nimport { ConnectionType, PeerErrorType, ConnectionEventType, ServerMessageType } from './enums';\nimport { BaseConnection } from './baseconnection';\n\nfunction noop(): void {}\n/**\n * Manages all negotiations between Peers.\n */\nexport class Negotiator {\n  constructor(readonly connection: BaseConnection) {}\n\n  private get webRtc() {\n    return this.connection.provider.options.polyfills?.WebRTC ?? window;\n  }\n\n  /** Returns a PeerConnection object set up correctly (for data, media). */\n  startConnection(options: any) {\n    const peerConnection = this._startPeerConnection();\n\n    // Set the connection's PC.\n    this.connection.peerConnection = peerConnection;\n\n    if (this.connection.type === ConnectionType.Media && options._stream) {\n      this._addTracksToConnection(options._stream, peerConnection);\n    }\n\n    // What do we need to do now?\n    if (options.originator) {\n      if (this.connection.type === ConnectionType.Data) {\n        const dataConnection = this.connection as DataConnection;\n\n        const config: RTCDataChannelInit = { ordered: !!options.reliable };\n\n        const dataChannel = peerConnection.createDataChannel(dataConnection.label, config);\n        dataConnection.initialize(dataChannel);\n      }\n\n      this._makeOffer();\n    } else {\n      this.handleSDP('OFFER', options.sdp);\n    }\n  }\n\n  /** Start a PC. */\n  private _startPeerConnection(): RTCPeerConnection {\n    logger.log('Creating RTCPeerConnection.');\n\n    const ctr: typeof RTCPeerConnection = this.webRtc.RTCPeerConnection;\n\n    const peerConnection = new ctr(this.connection.provider.options.config);\n\n    this._setupListeners(peerConnection);\n\n    return peerConnection;\n  }\n\n  /** Set up various WebRTC listeners. */\n  private _setupListeners(peerConnection: RTCPeerConnection) {\n    const peerId = this.connection.peer;\n    const connectionId = this.connection.connectionId;\n    const connectionType = this.connection.type;\n    const provider = this.connection.provider;\n\n    // ICE CANDIDATES.\n    logger.log('Listening for ICE candidates, remote streams and data channels.');\n\n    peerConnection.onicecandidate = evt => {\n      if (!evt.candidate || !evt.candidate.candidate) return;\n\n      logger.log(`Received ICE candidates for ${peerId}:`, evt.candidate);\n\n      provider.socket.send({\n        type: ServerMessageType.Candidate,\n        payload: {\n          candidate: evt.candidate,\n          type: connectionType,\n          connectionId: connectionId,\n        },\n        dst: peerId,\n      });\n    };\n\n    peerConnection.oniceconnectionstatechange = () => {\n      switch (peerConnection.iceConnectionState) {\n        case 'failed':\n          logger.log('iceConnectionState is failed, closing connections to ' + peerId);\n          this.connection.emit(\n            ConnectionEventType.Error,\n            new Error('Negotiation of connection to ' + peerId + ' failed.')\n          );\n          this.connection.close();\n          break;\n        case 'closed':\n          logger.log('iceConnectionState is closed, closing connections to ' + peerId);\n          this.connection.emit(ConnectionEventType.Error, new Error('Connection to ' + peerId + ' closed.'));\n          this.connection.close();\n          break;\n        case 'connected':\n          logger.log('iceConnectionState changed to connected on the connection with ' + peerId);\n          break;\n        case 'disconnected':\n          logger.log('iceConnectionState changed to disconnected on the connection with ' + peerId);\n          break;\n        case 'completed':\n          logger.log('iceConnectionState changed to completed on the connection with ' + peerId);\n          peerConnection.onicecandidate = noop;\n          break;\n      }\n\n      this.connection.emit(ConnectionEventType.IceStateChanged, peerConnection.iceConnectionState);\n    };\n\n    // Fired between offer and answer, so options should already be saved\n    // in the options hash.\n    peerConnection.ondatachannel = evt => {\n      logger.log('Received data channel');\n\n      const dataChannel = evt.channel;\n      const connection = provider.getConnection(peerId, connectionId) as DataConnection;\n\n      connection.initialize(dataChannel);\n    };\n\n    peerConnection.ontrack = evt => {\n      logger.log('Received remote stream');\n\n      const stream = evt.streams[0];\n      const connection = provider.getConnection(peerId, connectionId);\n\n      if (connection.type === ConnectionType.Media) {\n        const mediaConnection = connection as MediaConnection;\n\n        this._addStreamToMediaConnection(stream, mediaConnection);\n      }\n    };\n  }\n\n  cleanup(): void {\n    logger.log('Cleaning up PeerConnection to ' + this.connection.peer);\n\n    const peerConnection = this.connection.peerConnection;\n\n    if (!peerConnection) {\n      return;\n    }\n\n    this.connection.peerConnection = null;\n\n    //unsubscribe from all PeerConnection's events\n    peerConnection.onicecandidate =\n      peerConnection.oniceconnectionstatechange =\n      peerConnection.ondatachannel =\n      peerConnection.ontrack =\n        null;\n\n    const peerConnectionNotClosed = peerConnection.signalingState !== 'closed';\n    let dataChannelNotClosed = false;\n\n    if (this.connection.type === ConnectionType.Data) {\n      const dataConnection = this.connection as DataConnection;\n      const dataChannel = dataConnection.dataChannel;\n\n      if (dataChannel) {\n        dataChannelNotClosed = !!dataChannel.readyState && dataChannel.readyState !== 'closed';\n      }\n    }\n\n    if (peerConnectionNotClosed || dataChannelNotClosed) {\n      peerConnection.close();\n    }\n  }\n\n  private async _makeOffer(): Promise<void> {\n    const peerConnection = this.connection.peerConnection;\n    const provider = this.connection.provider;\n\n    try {\n      const offer = await peerConnection.createOffer(this.connection.options.constraints);\n\n      if (peerConnection.signalingState === 'closed') return;\n\n      logger.log('Created offer.');\n\n      if (this.connection.options.sdpTransform && typeof this.connection.options.sdpTransform === 'function') {\n        offer.sdp = this.connection.options.sdpTransform(offer.sdp) || offer.sdp;\n      }\n\n      try {\n        await peerConnection.setLocalDescription(offer);\n\n        logger.log('Set localDescription:', offer, `for:${this.connection.peer}`);\n\n        let payload: any = {\n          sdp: offer,\n          type: this.connection.type,\n          connectionId: this.connection.connectionId,\n          metadata: this.connection.metadata,\n        };\n\n        if (this.connection.type === ConnectionType.Data) {\n          const dataConnection = this.connection as DataConnection;\n\n          payload = {\n            ...payload,\n            label: dataConnection.label,\n            reliable: dataConnection.reliable,\n            serialization: dataConnection.serialization,\n          };\n        }\n\n        provider.socket.send({\n          type: ServerMessageType.Offer,\n          payload,\n          dst: this.connection.peer,\n        });\n      } catch (err) {\n        // TODO: investigate why _makeOffer is being called from the answer\n        if (err != 'OperationError: Failed to set local offer sdp: Called in wrong state: kHaveRemoteOffer') {\n          provider.emitError(PeerErrorType.WebRTC, err);\n          logger.log('Failed to setLocalDescription, ', err);\n        }\n      }\n    } catch (err_1) {\n      provider.emitError(PeerErrorType.WebRTC, err_1);\n      logger.log('Failed to createOffer, ', err_1);\n    }\n  }\n\n  private async _makeAnswer(): Promise<void> {\n    const peerConnection = this.connection.peerConnection;\n    const provider = this.connection.provider;\n\n    try {\n      const answer = await peerConnection.createAnswer();\n\n      if (peerConnection.signalingState === 'closed') return;\n\n      logger.log('Created answer.');\n\n      if (this.connection.options.sdpTransform && typeof this.connection.options.sdpTransform === 'function') {\n        answer.sdp = this.connection.options.sdpTransform(answer.sdp) || answer.sdp;\n      }\n\n      try {\n        await peerConnection.setLocalDescription(answer);\n\n        logger.log(`Set localDescription:`, answer, `for:${this.connection.peer}`);\n\n        provider.socket.send({\n          type: ServerMessageType.Answer,\n          payload: {\n            sdp: answer,\n            type: this.connection.type,\n            connectionId: this.connection.connectionId,\n          },\n          dst: this.connection.peer,\n        });\n      } catch (err) {\n        provider.emitError(PeerErrorType.WebRTC, err);\n        logger.log('Failed to setLocalDescription, ', err);\n      }\n    } catch (err_1) {\n      provider.emitError(PeerErrorType.WebRTC, err_1);\n      logger.log('Failed to create answer, ', err_1);\n    }\n  }\n\n  /** Handle an SDP. */\n  async handleSDP(type: string, sdp: any): Promise<void> {\n    const ctr: typeof RTCSessionDescription = this.webRtc.RTCSessionDescription;\n\n    sdp = new ctr(sdp);\n    const peerConnection = this.connection.peerConnection;\n    const provider = this.connection.provider;\n\n    logger.log('Setting remote description', sdp);\n\n    const self = this;\n\n    try {\n      await peerConnection.setRemoteDescription(sdp);\n      logger.log(`Set remoteDescription:${type} for:${this.connection.peer}`);\n      if (type === 'OFFER') {\n        await self._makeAnswer();\n      }\n    } catch (err) {\n      provider.emitError(PeerErrorType.WebRTC, err);\n      logger.log('Failed to setRemoteDescription, ', err);\n    }\n  }\n\n  /** Handle a candidate. */\n  async handleCandidate(ice: any): Promise<void> {\n    logger.log(`handleCandidate:`, ice);\n\n    const candidate = ice.candidate;\n    const sdpMLineIndex = ice.sdpMLineIndex;\n    const sdpMid = ice.sdpMid;\n    const peerConnection = this.connection.peerConnection;\n    const provider = this.connection.provider;\n\n    try {\n      const ctr: typeof RTCIceCandidate = this.webRtc.RTCIceCandidate;\n\n      await peerConnection.addIceCandidate(\n        new ctr({\n          sdpMid: sdpMid,\n          sdpMLineIndex: sdpMLineIndex,\n          candidate: candidate,\n        })\n      );\n      logger.log(`Added ICE candidate for:${this.connection.peer}`);\n    } catch (err) {\n      provider.emitError(PeerErrorType.WebRTC, err);\n      logger.log('Failed to handleCandidate, ', err);\n    }\n  }\n\n  private _addTracksToConnection(stream: MediaStream, peerConnection: RTCPeerConnection): void {\n    logger.log(`add tracks from stream ${stream.id} to peer connection`);\n\n    if (!peerConnection.addTrack) {\n      return logger.error(`Your browser does't support RTCPeerConnection#addTrack. Ignored.`);\n    }\n\n    stream.getTracks().forEach(track => {\n      peerConnection.addTrack(track, stream);\n    });\n  }\n\n  private _addStreamToMediaConnection(stream: MediaStream, mediaConnection: MediaConnection): void {\n    logger.log(`add stream ${stream.id} to media connection ${mediaConnection.connectionId}`);\n\n    mediaConnection.addStream(stream);\n  }\n}\n", "import { EventEmitter } from 'eventemitter3';\nimport type { Peer } from './peer';\nimport type { ServerMessage } from './servermessage';\nimport type { ConnectionType } from './enums';\n\nexport abstract class BaseConnection extends EventEmitter {\n  protected _open = false;\n\n  readonly metadata: any;\n  connectionId: string;\n\n  peerConnection: RTCPeerConnection;\n\n  abstract get type(): ConnectionType;\n\n  get open() {\n    return this._open;\n  }\n\n  constructor(readonly peer: string, public provider: Peer, readonly options: any) {\n    super();\n\n    this.metadata = options.metadata;\n  }\n\n  abstract close(): void;\n\n  abstract handleMessage(message: ServerMessage): void;\n}\n", "import { Utils } from './utils';\nimport logger from './logger';\nimport { Negotiator } from './negotiator';\nimport { ConnectionType, ConnectionEventType, ServerMessageType } from './enums';\nimport type { Peer } from './peer';\nimport { BaseConnection } from './baseconnection';\nimport type { ServerMessage } from './servermessage';\nimport type { AnswerOption } from '..';\n\n/**\n * Wraps the streaming interface between two Peers.\n */\nexport class MediaConnection extends BaseConnection {\n  private static readonly ID_PREFIX = 'mc_';\n\n  private _negotiator: Negotiator;\n  private _localStream: MediaStream;\n  private _remoteStream: MediaStream;\n\n  get type() {\n    return ConnectionType.Media;\n  }\n\n  get localStream(): MediaStream {\n    return this._localStream;\n  }\n  get remoteStream(): MediaStream {\n    return this._remoteStream;\n  }\n\n  constructor(peerId: string, provider: Peer, options: any) {\n    super(peerId, provider, options);\n\n    this._localStream = this.options._stream;\n    this.connectionId = this.options.connectionId || MediaConnection.ID_PREFIX + Utils.randomToken();\n\n    this._negotiator = new Negotiator(this);\n\n    if (this._localStream) {\n      this._negotiator.startConnection({\n        _stream: this._localStream,\n        originator: true,\n      });\n    }\n  }\n\n  addStream(remoteStream) {\n    logger.log('Receiving stream', remoteStream);\n\n    this._remoteStream = remoteStream;\n    super.emit(ConnectionEventType.Stream, remoteStream); // Should we call this `open`?\n  }\n\n  handleMessage(message: ServerMessage): void {\n    const type = message.type;\n    const payload = message.payload;\n\n    switch (message.type) {\n      case ServerMessageType.Answer:\n        // Forward to negotiator\n        this._negotiator.handleSDP(type, payload.sdp);\n        this._open = true;\n        break;\n      case ServerMessageType.Candidate:\n        this._negotiator.handleCandidate(payload.candidate);\n        break;\n      default:\n        logger.warn(`Unrecognized message type:${type} from peer:${this.peer}`);\n        break;\n    }\n  }\n\n  answer(stream: MediaStream, options: AnswerOption = {}): void {\n    if (this._localStream) {\n      logger.warn('Local stream already exists on this MediaConnection. Are you answering a call twice?');\n      return;\n    }\n\n    this._localStream = stream;\n\n    if (options && options.sdpTransform) {\n      this.options.sdpTransform = options.sdpTransform;\n    }\n\n    this._negotiator.startConnection({ ...this.options._payload, _stream: stream });\n    // Retrieve lost messages stored because PeerConnection not set up.\n    const messages = this.provider._getMessages(this.connectionId);\n\n    for (let message of messages) {\n      this.handleMessage(message);\n    }\n\n    this._open = true;\n  }\n\n  /**\n   * Exposed functionality for users.\n   */\n\n  /** Allows user to close connection. */\n  close(): void {\n    if (this._negotiator) {\n      this._negotiator.cleanup();\n      this._negotiator = null;\n    }\n\n    this._localStream = null;\n    this._remoteStream = null;\n\n    if (this.provider) {\n      this.provider._removeConnection(this);\n\n      this.provider = null;\n    }\n\n    if (this.options && this.options._stream) {\n      this.options._stream = null;\n    }\n\n    if (!this.open) {\n      return;\n    }\n\n    this._open = false;\n\n    super.emit(ConnectionEventType.Close);\n  }\n}\n", "import { EventEmitter } from 'eventemitter3';\nimport logger from './logger';\n\nexport class EncodingQueue extends EventEmitter {\n  private _queue: Blob[] = [];\n  private _processing: boolean = false;\n\n  constructor(private readonly fileReader: FileReader) {\n    super();\n\n    this.fileReader.onload = evt => {\n      this._processing = false;\n\n      if (evt.target) {\n        this.emit('done', evt.target.result as ArrayBuffer);\n      }\n\n      this.doNextTask();\n    };\n\n    this.fileReader.onerror = evt => {\n      logger.error(`EncodingQueue error:`, evt);\n      this._processing = false;\n      this.destroy();\n      this.emit('error', evt);\n    };\n  }\n\n  get queue(): Blob[] {\n    return this._queue;\n  }\n\n  get size(): number {\n    return this.queue.length;\n  }\n\n  get processing(): boolean {\n    return this._processing;\n  }\n\n  enque(blob: Blob): void {\n    this.queue.push(blob);\n\n    if (this.processing) return;\n\n    this.doNextTask();\n  }\n\n  destroy(): void {\n    this.fileReader.abort();\n    this._queue = [];\n  }\n\n  private doNextTask(): void {\n    if (this.size === 0) return;\n    if (this.processing) return;\n\n    this._processing = true;\n\n    this.fileReader.readAsArrayBuffer(this.queue.shift());\n  }\n}\n", "import { Utils } from './utils';\nimport logger from './logger';\nimport { Negotiator } from './negotiator';\nimport { ConnectionType, ConnectionEventType, SerializationType, ServerMessageType } from './enums';\nimport type { Peer } from './peer';\nimport { BaseConnection } from './baseconnection';\nimport type { ServerMessage } from './servermessage';\nimport { EncodingQueue } from './encodingQueue';\nimport type { DataConnection as IDataConnection } from '../index';\n\n/**\n * Wraps a DataChannel between two Peers.\n */\nexport class DataConnection extends BaseConnection implements IDataConnection {\n  private static readonly ID_PREFIX = 'dc_';\n  private static readonly MAX_BUFFERED_AMOUNT = 8 * 1024 * 1024;\n\n  private _negotiator: Negotiator;\n  readonly label: string;\n  readonly serialization: SerializationType;\n  readonly reliable: boolean;\n  stringify: (data: any) => string = JSON.stringify;\n  parse: (data: string) => any = JSON.parse;\n\n  get type() {\n    return ConnectionType.Data;\n  }\n\n  private _buffer: any[] = [];\n  private _bufferSize = 0;\n  private _buffering = false;\n  private _chunkedData: {\n    [id: number]: {\n      data: Blob[];\n      count: number;\n      total: number;\n    };\n  } = {};\n\n  private _dc: RTCDataChannel;\n  private _encodingQueue: EncodingQueue;\n\n  get dataChannel(): RTCDataChannel {\n    return this._dc;\n  }\n\n  get bufferSize(): number {\n    return this._bufferSize;\n  }\n\n  private readonly FileReaderCtr: typeof FileReader;\n\n  constructor(peerId: string, provider: Peer, options: any) {\n    super(peerId, provider, options);\n\n    this.connectionId = this.options.connectionId || DataConnection.ID_PREFIX + Utils.randomToken();\n\n    this.label = this.options.label || this.connectionId;\n    this.serialization = this.options.serialization || SerializationType.Binary;\n    this.reliable = !!this.options.reliable;\n\n    this.FileReaderCtr = provider.options.polyfills?.FileReader ?? window.FileReader;\n\n    this._encodingQueue = new EncodingQueue(new this.FileReaderCtr());\n\n    this._encodingQueue.on('done', (ab: ArrayBuffer) => {\n      this._bufferedSend(ab);\n    });\n\n    this._encodingQueue.on('error', () => {\n      logger.error(`DC#${this.connectionId}: Error occured in encoding from blob to arraybuffer, close DC`);\n      this.close();\n    });\n\n    this._negotiator = new Negotiator(this);\n\n    this._negotiator.startConnection(\n      this.options._payload || {\n        originator: true,\n      }\n    );\n  }\n\n  /** Called by the Negotiator when the DataChannel is ready. */\n  initialize(dc: RTCDataChannel): void {\n    this._dc = dc;\n    this._configureDataChannel();\n  }\n\n  private _configureDataChannel(): void {\n    if (!this.provider.features.binaryBlob || this.provider.features.reliable) {\n      this.dataChannel.binaryType = 'arraybuffer';\n    }\n\n    this.dataChannel.onopen = () => {\n      logger.log(`DC#${this.connectionId} dc connection success`);\n      this._open = true;\n      this.emit(ConnectionEventType.Open);\n    };\n\n    this.dataChannel.onmessage = e => {\n      logger.log(`DC#${this.connectionId} dc onmessage:`, e.data);\n      this._handleDataMessage(e);\n    };\n\n    this.dataChannel.onclose = () => {\n      logger.log(`DC#${this.connectionId} dc closed for:`, this.peer);\n      this.close();\n    };\n  }\n\n  // Handles a DataChannel message.\n  private _handleDataMessage({ data }: { data: Blob | ArrayBuffer | string }): void {\n    const datatype = data.constructor;\n\n    const isBinarySerialization =\n      this.serialization === SerializationType.Binary || this.serialization === SerializationType.BinaryUTF8;\n\n    let deserializedData: any = data;\n\n    if (isBinarySerialization) {\n      if (datatype === Blob) {\n        // Datatype should never be Blob\n        Utils.blobToArrayBuffer(this.FileReaderCtr, data as Blob, ab => {\n          const unpackedData = Utils.unpack(ab);\n          this.emit(ConnectionEventType.Data, unpackedData);\n        });\n        return;\n      } else if (datatype === ArrayBuffer) {\n        deserializedData = Utils.unpack(data as ArrayBuffer);\n      } else if (datatype === String) {\n        // String fallback for binary data for browsers that don't support binary yet\n        const ab = Utils.binaryStringToArrayBuffer(data as string);\n        deserializedData = Utils.unpack(ab);\n      }\n    } else if (this.serialization === SerializationType.JSON) {\n      deserializedData = this.parse(data as string);\n    }\n\n    // Check if we've chunked--if so, piece things back together.\n    // We're guaranteed that this isn't 0.\n    if (deserializedData.__peerData) {\n      this._handleChunk(deserializedData);\n      return;\n    }\n\n    super.emit(ConnectionEventType.Data, deserializedData);\n  }\n\n  private _handleChunk(data: { __peerData: number; n: number; total: number; data: Blob }): void {\n    const id = data.__peerData;\n    const chunkInfo = this._chunkedData[id] || {\n      data: [],\n      count: 0,\n      total: data.total,\n    };\n\n    chunkInfo.data[data.n] = data.data;\n    chunkInfo.count++;\n    this._chunkedData[id] = chunkInfo;\n\n    if (chunkInfo.total === chunkInfo.count) {\n      // Clean up before making the recursive call to `_handleDataMessage`.\n      delete this._chunkedData[id];\n\n      // We've received all the chunks--time to construct the complete data.\n      const data = new Blob(chunkInfo.data);\n      this._handleDataMessage({ data });\n    }\n  }\n\n  /**\n   * Exposed functionality for users.\n   */\n\n  /** Allows user to close connection. */\n  close(): void {\n    this._buffer = [];\n    this._bufferSize = 0;\n    this._chunkedData = {};\n\n    if (this._negotiator) {\n      this._negotiator.cleanup();\n      this._negotiator = null;\n    }\n\n    if (this.provider) {\n      this.provider._removeConnection(this);\n\n      this.provider = null;\n    }\n\n    if (this.dataChannel) {\n      this.dataChannel.onopen = null;\n      this.dataChannel.onmessage = null;\n      this.dataChannel.onclose = null;\n      this._dc = null;\n    }\n\n    if (this._encodingQueue) {\n      this._encodingQueue.destroy();\n      this._encodingQueue.removeAllListeners();\n      this._encodingQueue = null;\n    }\n\n    if (!this.open) {\n      return;\n    }\n\n    this._open = false;\n\n    super.emit(ConnectionEventType.Close);\n  }\n\n  /** Allows user to send data. */\n  send(data: any, chunked?: boolean): void {\n    if (!this.open) {\n      super.emit(\n        ConnectionEventType.Error,\n        new Error('Connection is not open. You should listen for the `open` event before sending messages.')\n      );\n      return;\n    }\n\n    if (this.serialization === SerializationType.JSON) {\n      this._bufferedSend(this.stringify(data));\n    } else if (this.serialization === SerializationType.Binary || this.serialization === SerializationType.BinaryUTF8) {\n      const blob = Utils.pack(data);\n\n      if (!chunked && blob.size > Utils.chunkedMTU) {\n        this._sendChunks(blob);\n        return;\n      }\n\n      if (!this.provider.features.binaryBlob) {\n        // We only do this if we really need to (e.g. blobs are not supported),\n        // because this conversion is costly.\n        this._encodingQueue.enque(blob);\n      } else {\n        this._bufferedSend(blob);\n      }\n    } else {\n      this._bufferedSend(data);\n    }\n  }\n\n  private _bufferedSend(msg: any): void {\n    if (this._buffering || !this._trySend(msg)) {\n      this._buffer.push(msg);\n      this._bufferSize = this._buffer.length;\n    }\n  }\n\n  // Returns true if the send succeeds.\n  private _trySend(msg: any): boolean {\n    if (!this.open) {\n      return false;\n    }\n\n    if (this.dataChannel.bufferedAmount > DataConnection.MAX_BUFFERED_AMOUNT) {\n      this._buffering = true;\n      setTimeout(() => {\n        this._buffering = false;\n        this._tryBuffer();\n      }, 50);\n\n      return false;\n    }\n\n    try {\n      this.dataChannel.send(msg);\n    } catch (e) {\n      logger.error(`DC#:${this.connectionId} Error when sending:`, e);\n      this._buffering = true;\n\n      this.close();\n\n      return false;\n    }\n\n    return true;\n  }\n\n  // Try to send the first message in the buffer.\n  private _tryBuffer(): void {\n    if (!this.open) {\n      return;\n    }\n\n    if (this._buffer.length === 0) {\n      return;\n    }\n\n    const msg = this._buffer[0];\n\n    if (this._trySend(msg)) {\n      this._buffer.shift();\n      this._bufferSize = this._buffer.length;\n      this._tryBuffer();\n    }\n  }\n\n  private _sendChunks(blob: Blob): void {\n    const blobs = Utils.chunk(blob);\n    logger.log(`DC#${this.connectionId} Try to send ${blobs.length} chunks...`);\n\n    for (let blob of blobs) {\n      this.send(blob, true);\n    }\n  }\n\n  handleMessage(message: ServerMessage): void {\n    const payload = message.payload;\n\n    switch (message.type) {\n      case ServerMessageType.Answer:\n        this._negotiator.handleSDP(message.type, payload.sdp);\n        break;\n      case ServerMessageType.Candidate:\n        this._negotiator.handleCandidate(payload.candidate);\n        break;\n      default:\n        logger.warn('Unrecognized message type:', message.type, 'from peer:', this.peer);\n        break;\n    }\n  }\n}\n", "import { Utils } from './utils';\nimport logger from './logger';\nimport { PeerJSOption } from '..';\n\nexport class API {\n  constructor(private readonly _options: PeerJSOption) {}\n\n  private _request(url: string) {\n    return (this._options.polyfills?.fetch ?? window.fetch)(url);\n  }\n\n  private _buildUrl(method: string): string {\n    const protocol = this._options.secure ? 'https://' : 'http://';\n    let url =\n      protocol + this._options.host + ':' + this._options.port + this._options.path + this._options.key + '/' + method;\n    const queryString = '?ts=' + new Date().getTime() + '' + Math.random();\n    url += queryString;\n\n    return url;\n  }\n\n  /** Get a unique ID from the server via XHR and initialize with it. */\n  async retrieveId(): Promise<string> {\n    const url = this._buildUrl('id');\n\n    try {\n      const response = await this._request(url);\n\n      if (response.status !== 200) {\n        throw new Error(`Error. Status:${response.status}`);\n      }\n\n      return response.text();\n    } catch (error) {\n      logger.error('Error retrieving ID', error);\n\n      let pathError = '';\n\n      if (this._options.path === '/' && this._options.host !== Utils.CLOUD_HOST) {\n        pathError =\n          ' If you passed in a `path` to your self-hosted PeerServer, ' +\n          \"you'll also need to pass in that same path when creating a new \" +\n          'Peer.';\n      }\n\n      throw new Error('Could not get an ID from the server.' + pathError);\n    }\n  }\n\n  /** @deprecated */\n  async listAllPeers(): Promise<any[]> {\n    const url = this._buildUrl('peers');\n\n    try {\n      const response = await this._request(url);\n\n      if (response.status !== 200) {\n        if (response.status === 401) {\n          let helpfulError = '';\n\n          if (this._options.host === Utils.CLOUD_HOST) {\n            helpfulError =\n              \"It looks like you're using the cloud server. You can email \" +\n              'team@peerjs.com to enable peer listing for your API key.';\n          } else {\n            helpfulError =\n              'You need to enable `allow_discovery` on your self-hosted ' + 'PeerServer to use this feature.';\n          }\n\n          throw new Error(\"It doesn't look like you have permission to list peers IDs. \" + helpfulError);\n        }\n\n        throw new Error(`Error. Status:${response.status}`);\n      }\n\n      return response.json();\n    } catch (error) {\n      logger.error('Error retrieving list peers', error);\n\n      throw new Error('Could not get list peers from the server.' + error);\n    }\n  }\n}\n", "export const Supports = {\n  isUnifiedPlanSupported(webRtc: any): boolean {\n    if (!webRtc && typeof window !== 'undefined') {\n      webRtc = window;\n    }\n\n    if (\n      typeof webRtc.RTCRtpTransceiver === 'undefined' ||\n      !('currentDirection' in webRtc.RTCRtpTransceiver.prototype)\n    ) {\n      return false;\n    }\n\n    let tempPc: RTCPeerConnection;\n    let supported = false;\n\n    try {\n      tempPc = new webRtc.RTCPeerConnection();\n      tempPc.addTransceiver('audio');\n      supported = true;\n    } catch (e) {\n    } finally {\n      if (tempPc) {\n        tempPc.close();\n      }\n    }\n\n    return supported;\n  },\n} as const;\n", "import { Utils } from './utils';\nimport { Peer } from './peer';\n\nexport { Peer, Utils };\n\nexport default Peer;\n\nif (typeof window !== 'undefined') {\n  // @ts-expect-error\n  window.Peer = Peer;\n}\n"],
  "mappings": "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",
  "names": []
}
