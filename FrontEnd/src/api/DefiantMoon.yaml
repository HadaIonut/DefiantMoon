openapi: 3.0.3
info:
  title: Title
  description: Title
  version: 1.0.0
servers:
  - url: http://localhost:8000
paths:
  /auth/login:
    post:
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - userId
                - password
      responses:
        200:
          description: "success"
          headers:
            Set-Cookie:
              schema:
                type: string
  /users:
    get:
      operationId: getAvailableUsers
      responses:
        200:
          description: "success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: '#/components/schemas/AvailableUser'
  /users/me:
    get:
      operationId: getUserProfile
      security:
        - cookieAuth: []
      responses:
        200:
          description: "success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: '#/components/schemas/AvailableUser'
  /chat/messages:
    get:
      operationId: getChatMessages
      security:
        - cookieAuth: [ ]
      parameters:
        - in: query
          name: timestamp
          schema:
            type: integer
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                nullable: false
                items:
                  $ref: '#/components/schemas/ChatMessage'
    post:
      operationId: sendChatMessage
      security:
        - cookieAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                message:
                  type: string
                images:
                  type: array
                  items:
                    type: string
                    format: binary
              required:
                - message
                - images
      responses:
        200:
          description: "success"
  /actors/all:
    get:
      operationId: getActors
      security:
        - cookieAuth: [ ]
      responses:
        200:
          description: success

components:
  securitySchemes:
    cookieAuth: # arbitrary name for the security scheme; will be used in the "security" key later
      type: apiKey
      in: cookie
      name: accessToken  # cookie name
  schemas:
    AvailableUser:
      properties:
        id:
          type: string
        username:
          type: string
      required:
        - id
        - username

    ChatMessage:
      properties:
        id:
          type: string
        content:
          type: array
          items:
            oneOf:
              - type: string
              - type: number
        timestamp:
          type: number
        from:
          type: string
        images:
          type: array
          items:
            type: string